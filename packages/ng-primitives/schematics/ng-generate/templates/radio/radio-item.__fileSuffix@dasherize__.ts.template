import { Component } from '@angular/core';
import { NgpRadioItem } from 'ng-primitives/radio';

@Component({
  selector: '<%= prefix %>-radio-item',
  hostDirectives: [
    {
      directive: NgpRadioItem,
      inputs: ['ngpRadioItemValue:value', 'ngpRadioItemDisabled:disabled'],
    },
  ],
  template: `
    <div ngpRadioIndicator>
      <span class="indicator-dot"></span>
    </div>

    <p class="title">
      <ng-content />
    </p>
  `,
  styles: `
/* These styles rely on CSS variables that can be imported from ng-primitives/example-theme/index.css in your global styles */

    :host {
      display: grid;
      cursor: pointer;
      grid-template-columns: auto 1fr;
      grid-template-rows: repeat(2, auto);
      column-gap: 0.625rem;
      row-gap: 0.125rem;
      border-radius: 0.5rem;
      background-color: var(--ngp-background);
      padding: 0.75rem 1rem;
      box-shadow: var(--ngp-button-shadow);
      outline: none;
    }

    :host[data-hover] {
      background-color: var(--ngp-background-hover);
    }

    :host[data-focus-visible] {
      outline: 2px solid var(--ngp-focus-ring);
      outline-offset: 2px;
    }

    :host[data-press] {
      background-color: var(--ngp-background-active);
    }

    :host[data-checked] {
      background-color: var(--ngp-background-inverse);
    }

    [ngpRadioIndicator] {
      display: inline-flex;
      grid-column-start: 1;
      grid-row-start: 1;
      justify-content: center;
      align-items: center;
      align-self: center;
      border-radius: 9999px;
      width: 1rem;
      height: 1rem;
      border: 1px solid var(--ngp-border);
    }

    .indicator-dot {
      width: 0.5rem;
      height: 0.5rem;
      border-radius: 9999px;
      background-color: transparent;
    }

    :host[data-checked] .indicator-dot {
      background-color: var(--ngp-background);
    }

    .title {
      grid-column-start: 2;
      grid-row-start: 1;
      font-weight: 500;
      color: var(--ngp-text-primary);
      margin: 0;
    }

    :host[data-checked] .title {
      color: var(--ngp-text-inverse);
    }
  `,
})
export class RadioItem<%= componentSuffix %> {}
